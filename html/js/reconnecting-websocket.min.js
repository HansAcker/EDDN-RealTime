function l(e,n,t){var o={debug:false,automaticOpen:true,reconnectInterval:1e3,maxReconnectInterval:3e4,reconnectDecay:1.5,timeoutInterval:2e3,maxReconnectAttempts:null,binaryType:"blob"};if(!t){t={}}for(var c in o){if(typeof t[c]!=="undefined"){this[c]=t[c]}else{this[c]=o[c]}}this.url=e;this.reconnectAttempts=0;this.readyState=WebSocket.CONNECTING;this.protocol=null;var i=this;var s;var f=false;var u=false;var r=document.createElement("div");r.addEventListener("open",function(e){i.onopen(e)});r.addEventListener("close",function(e){i.onclose(e)});r.addEventListener("connecting",function(e){i.onconnecting(e)});r.addEventListener("message",function(e){i.onmessage(e)});r.addEventListener("error",function(e){i.onerror(e)});this.addEventListener=r.addEventListener.bind(r);this.removeEventListener=r.removeEventListener.bind(r);this.dispatchEvent=r.dispatchEvent.bind(r);function a(e,n){var t=document.createEvent("CustomEvent");t.initCustomEvent(e,false,false,n);return t}this.open=function(o){s=new WebSocket(i.url,n||[]);s.binaryType=this.binaryType;if(o){if(this.maxReconnectAttempts&&this.reconnectAttempts>this.maxReconnectAttempts){return}}else{r.dispatchEvent(a("connecting"));this.reconnectAttempts=0}if(i.debug||l.debugAll){console.debug("ReconnectingWebSocket","attempt-connect",i.url)}var e=s;var t=setTimeout(function(){if(i.debug||l.debugAll){console.debug("ReconnectingWebSocket","connection-timeout",i.url)}u=true;e.close();u=false},i.timeoutInterval);s.onopen=function(e){clearTimeout(t);if(i.debug||l.debugAll){console.debug("ReconnectingWebSocket","onopen",i.url)}i.protocol=s.protocol;i.readyState=WebSocket.OPEN;i.reconnectAttempts=0;var n=a("open");n.isReconnect=o;o=false;r.dispatchEvent(n)};s.onclose=function(e){clearTimeout(t);s=null;if(f){i.readyState=WebSocket.CLOSED;r.dispatchEvent(a("close"))}else{i.readyState=WebSocket.CONNECTING;var n=a("connecting");n.code=e.code;n.reason=e.reason;n.wasClean=e.wasClean;r.dispatchEvent(n);if(!o&&!u){if(i.debug||l.debugAll){console.debug("ReconnectingWebSocket","onclose",i.url)}r.dispatchEvent(a("close"))}var t=i.reconnectInterval*Math.pow(i.reconnectDecay,i.reconnectAttempts);setTimeout(function(){i.reconnectAttempts++;i.open(true)},t>i.maxReconnectInterval?i.maxReconnectInterval:t)}};s.onmessage=function(e){if(i.debug||l.debugAll){console.debug("ReconnectingWebSocket","onmessage",i.url,e.data)}var n=a("message");n.data=e.data;r.dispatchEvent(n)};s.onerror=function(e){if(i.debug||l.debugAll){console.debug("ReconnectingWebSocket","onerror",i.url,e)}r.dispatchEvent(a("error"))}};if(this.automaticOpen==true){this.open(false)}this.send=function(e){if(s){if(i.debug||l.debugAll){console.debug("ReconnectingWebSocket","send",i.url,e)}return s.send(e)}else{throw"INVALID_STATE_ERR : Pausing to reconnect websocket"}};this.close=function(e,n){if(typeof e=="undefined"){e=1e3}f=true;if(s){s.close(e,n)}};this.refresh=function(){if(s){s.close()}}}l.prototype.onopen=function(e){};l.prototype.onclose=function(e){};l.prototype.onconnecting=function(e){};l.prototype.onmessage=function(e){};l.prototype.onerror=function(e){};l.debugAll=false;l.CONNECTING=WebSocket.CONNECTING;l.OPEN=WebSocket.OPEN;l.CLOSING=WebSocket.CLOSING;l.CLOSED=WebSocket.CLOSED;export{l as ReconnectingWebSocket};
